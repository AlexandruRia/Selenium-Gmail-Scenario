package task;

import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

//Version that uses TestNG, report is generated by TestNG automatically after finishing tests, for the version without TestNG navigate to: ./src/main/java/task/GmailScenario
public class GmailScenarioTest {
    WebDriver driver;
    WebDriverWait wait;

    @BeforeTest
    public void setup() {
        WebDriverManager.chromedriver().setup();

        ChromeOptions options = new ChromeOptions();
        options.addArguments("start-maximized");
        driver = new ChromeDriver(options);

        wait = new WebDriverWait(driver, 10);

        //Navigate to Gmail
        driver.get("https://mail.google.com/ ");

        //Test account is used, credentials: email: tt6463042@gmail.com , password: testing123!
        //Input email address and click Next
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"identifierId\"]"))).sendKeys("tt6463042@gmail.com");
        driver.findElement(By.xpath("//*[@id=\"identifierNext\"]/div/button")).click();

        //Input password and click Next
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"password\"]/div[1]/div/div[1]/input"))).sendKeys("testing123!");
        driver.findElement(By.xpath("//*[@id=\"passwordNext\"]/div/button")).click();

        //Click on 'More' and mark everything as read, this is going to help us identify the new future sent mail
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[@role=\"button\" and @class=\"T-I J-J5-Ji nf T-I-ax7 L3\"]"))).click();
        driver.findElement(By.xpath("//div[text()=\"Mark all as read\"]")).click();

        //Click on Compose button
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[text()=\"Compose\" and @role=\"button\"]"))).click();

        //Fill in the To, Subject and Body fields
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[contains(@class,\"agP aFw\")]"))).sendKeys("tt6463042@gmail.com");
        driver.findElement(By.name("subjectbox")).sendKeys("Test message!");
        driver.findElement(By.xpath("//div[@class=\"Am Al editable LW-avf tS-tW\"]")).sendKeys("This is a test message!");

        //Click on the Send button
        driver.findElement(By.xpath("//div[text()=\"Send\"]")).click();

        //waiting for the Message Sent pop-up to appear before moving on to make sure than message is properly sent
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[text()=\"Message sent\"]")));

    }

    @Test(priority = 0)
    public void testMailReceived(){
        //Finding and clicking on the received mail, if email not found will throw exception which will result in failed tests
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//tr[@class=\"zA zE\"][1]"))).click();
    }

    @Test(priority = 1)
    public void testSubject(){
        //Finding the subject of the opened mail
        WebElement findSubject = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h2[@class='hP']")));
        Reporter.log("value of subject is: " + findSubject.getText());
        Assert.assertEquals(findSubject.getText(), "Test message!");
    }

    @Test(priority = 1)
    public void testBody(){
        //Finding the body of the opened mail
        WebElement findBody = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[@class='a3s aiL ']/div[1]")));
        Reporter.log("value of body is: " + findBody.getText());
        Assert.assertEquals(findBody.getText(), "This is a test message!");
    }

    @AfterTest
    public void exit() {
        driver.quit();
    }
}
